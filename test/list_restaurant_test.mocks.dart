// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant_app_v1/test/list_restaurant_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:restaurant_app_v1/data/api/api_service.dart' as _i5;
import 'package:restaurant_app_v1/data/model/customer_review.dart' as _i4;
import 'package:restaurant_app_v1/data/model/detail_restaurant.dart' as _i3;
import 'package:restaurant_app_v1/data/model/list_restaurant.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRestaurantList_0 extends _i1.SmartFake
    implements _i2.RestaurantList {
  _FakeRestaurantList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantDetail_1 extends _i1.SmartFake
    implements _i3.RestaurantDetail {
  _FakeRestaurantDetail_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerReviewResult_2 extends _i1.SmartFake
    implements _i4.CustomerReviewResult {
  _FakeCustomerReviewResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String imageUrl(
    String? pictureId, {
    String? resolution = r'small',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #imageUrl,
          [pictureId],
          {#resolution: resolution},
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #imageUrl,
            [pictureId],
            {#resolution: resolution},
          ),
        ),
      ) as String);

  @override
  _i7.Future<_i2.RestaurantList> getListRestaurant() => (super.noSuchMethod(
        Invocation.method(
          #getListRestaurant,
          [],
        ),
        returnValue: _i7.Future<_i2.RestaurantList>.value(_FakeRestaurantList_0(
          this,
          Invocation.method(
            #getListRestaurant,
            [],
          ),
        )),
      ) as _i7.Future<_i2.RestaurantList>);

  @override
  _i7.Future<_i3.RestaurantDetail> getDetailRestaurant(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailRestaurant,
          [id],
        ),
        returnValue:
            _i7.Future<_i3.RestaurantDetail>.value(_FakeRestaurantDetail_1(
          this,
          Invocation.method(
            #getDetailRestaurant,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.RestaurantDetail>);

  @override
  _i7.Future<_i2.RestaurantList> searchRestaurant(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurant,
          [query],
        ),
        returnValue: _i7.Future<_i2.RestaurantList>.value(_FakeRestaurantList_0(
          this,
          Invocation.method(
            #searchRestaurant,
            [query],
          ),
        )),
      ) as _i7.Future<_i2.RestaurantList>);

  @override
  _i7.Future<_i4.CustomerReviewResult> addReviewRestaurant(
          Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReviewRestaurant,
          [data],
        ),
        returnValue: _i7.Future<_i4.CustomerReviewResult>.value(
            _FakeCustomerReviewResult_2(
          this,
          Invocation.method(
            #addReviewRestaurant,
            [data],
          ),
        )),
      ) as _i7.Future<_i4.CustomerReviewResult>);
}
